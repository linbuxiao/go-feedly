// Code generated by go-swagger; DO NOT EDIT.

package boards

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateBoardReader is a Reader for the UpdateBoard structure.
type UpdateBoardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBoardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBoardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateBoardForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateBoardOK creates a UpdateBoardOK with default headers values
func NewUpdateBoardOK() *UpdateBoardOK {
	return &UpdateBoardOK{}
}

/* UpdateBoardOK describes a response with status code 200, with default header values.

Success
*/
type UpdateBoardOK struct {
}

func (o *UpdateBoardOK) Error() string {
	return fmt.Sprintf("[POST /boards][%d] updateBoardOK ", 200)
}

func (o *UpdateBoardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBoardForbidden creates a UpdateBoardForbidden with default headers values
func NewUpdateBoardForbidden() *UpdateBoardForbidden {
	return &UpdateBoardForbidden{}
}

/* UpdateBoardForbidden describes a response with status code 403, with default header values.

the board id passed doesnâ€™t match the logged-in user id
*/
type UpdateBoardForbidden struct {
}

func (o *UpdateBoardForbidden) Error() string {
	return fmt.Sprintf("[POST /boards][%d] updateBoardForbidden ", 403)
}

func (o *UpdateBoardForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
